{"version":3,"sources":["app.module.js","announcement/announcement.module.js","api/api.module.js","comment/comment.module.js","group/group.module.js","settings/settings.module.js","user/user.module.js","app.routes.js","gravatar.config.js","_lib/angular-sails.js","user/routeObserver.run.js","announcement/constant/types.constant.js","announcement/controller/add.controller.js","announcement/controller/detail.controller.js","announcement/factory/announcement.factory.js","api/config/api.config.js","api/constant/api.constant.js","api/factory/api.factory.js","comment/factory/comment.factory.js","group/controller/add.controller.js","group/controller/detail.controller.js","group/controller/list.controller.js","group/controller/members.controller.js","group/factory/group.factory.js","settings/constant/settings.constant.js","settings/controller/settings.controller.js","settings/factory/settings.factory.js","settings/factory/theme.factory.js","user/constant/auth.constant.js","user/constant/roles.constant.js","user/controller/acl.controller.js","user/controller/login.controller.js","user/controller/register.controller.js","user/controller/welcome.controller.js","user/factory/auth.factory.js","user/factory/user.factory.js","user/service/userSession.service.js","group/controller/members/add.controller.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACthrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACppIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.min.js","sourcesContent":["(function(){\n\n'use strict';\n\nangular.module('ws.app', [\n      'ionic', \n      'ngCordova', \n      'LocalStorageModule', \n      'ngSails',\n      'ui.gravatar', \n      'ws.api',\n      'ws.group', \n      'ws.announcement', \n      'ws.user', \n      'ws.settings',\n      'ws.comment'\n    ])\n    .config(['$sailsProvider', function ($sailsProvider) {\n            $sailsProvider.url = 'http://whatsschool.herokuapp.com:80';\n    }])\n    .config([\"$ionicConfigProvider\", function($ionicConfigProvider) {\n      $ionicConfigProvider.platform.android.backButton.icon('ion-ios7-arrow-back');\n    }])\n    .run([\"$ionicPlatform\", \"$cordovaStatusbar\", function($ionicPlatform, $cordovaStatusbar) {\n          $ionicPlatform.ready(function() {\n            // Hide the accessory bar by default (remove this to show the accessory bar above the keyboard\n            // for form inputs)\n            if(window.cordova && window.cordova.plugins.Keyboard) {\n              cordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);\n              cordova.plugins.Keyboard.disableScroll(true);\n            }\n            if(window.StatusBar) {\n              // org.apache.cordova.statusbar required\n              $cordovaStatusbar.styleColor('white');\n            }\n        });\n    }]);\n\n})();","(function(){\n    'use strict';\n\n    angular.module('ws.announcement', ['ionic', 'ws.user']);\n})();","(function(){\n    'use strict';\n    angular.module('ws.api', ['ngSails']);\n})();","(function() {\n    'use strict';\n    angular.module('ws.comment', ['ws.api']);\n})();","(function() {\n    'use strict';\n\n    angular.module('ws.group', ['ionic', 'ngSails', 'ws.announcement', 'ws.user', 'ws.api']);\n})();","(function(){\n    'use strict';\n\n    angular.module('ws.settings', ['ionic', 'ui.gravatar', 'ws.user'])\n        .run([\"$rootScope\", \"$timeout\", \"Theme\", \"SETTINGS_EVENTS\", function($rootScope, $timeout, Theme, SETTINGS_EVENTS){\n            $rootScope.$broadcast(SETTINGS_EVENTS.CHECK_THEME);\n        }])\n    ;\n})();","(function(){\n    'use strict';\n    angular.module('ws.user', ['ionic', 'LocalStorageModule', 'ws.api']);\n})();","(function(){\n    'use strict';\n\n    angular.module('ws.app')\n        .config([\"$stateProvider\", \"$urlRouterProvider\", \"USER_ROLES\", function($stateProvider, $urlRouterProvider, USER_ROLES) {\n            $stateProvider\n                .state('tabs', {\n                    url: '/tabs',\n                    abstract: true,\n                    templateUrl: 'templates/tabs.html',\n                    data: {\n                        authorizedRoles: [USER_ROLES.student, USER_ROLES.teacher, USER_ROLES.admin]\n                    }\n                })\n                .state('tabs.groups', {\n                    url: '/groups',\n                    views: {\n                        'tab-groups': {\n                            templateUrl: 'templates/group/list.html',\n                            controller: 'GroupListCtrl as ctrl'\n                        }\n                    }\n                    \n                })\n                .state('tabs.groups-announcement', {\n                    url: '/groups/:groupId/announcement/:announcementId',\n                    views: {\n                        'tab-groups': {\n                            templateUrl: 'templates/announcement/detail.html',\n                            controller: 'AnnouncementDetailCtrl as ctrl'\n                        }\n                    }\n                    \n                })\n                .state('tabs.groups-detail', {\n                    url: '/groups/:id',\n                    views: {\n                        'tab-groups': {\n                            templateUrl: 'templates/group/detail.html',\n                            controller: 'GroupDetailCtrl as ctrl'\n                        }\n                    }\n                    \n                })\n                .state('tabs.groups-members', {\n                    url: '/groups/:id/members',\n                    views: {\n                        'tab-groups': {\n                            templateUrl: 'templates/group/members.html',\n                            controller: 'GroupMembersCtrl as MembersCtrl'\n                        }\n                    }\n                })\n                .state('tabs.settings', {\n                    url: '/settings',\n                    views: {\n                        'tab-settings': {\n                            templateUrl: 'templates/settings.html',\n                            controller: 'SettingsCtrl as ctrl'\n                        }\n                    }\n                })\n                .state('welcome', {\n                    url: '/welcome',\n                    templateUrl: 'templates/welcome.html',\n                    controller: 'WelcomeCtrl as ctrl'\n                })\n            ;\n            \n            $urlRouterProvider.otherwise( function($injector, $location) {\n                var $state = $injector.get('$state');\n                $state.go('welcome');\n            });\n        }]);\n})();","(function(){\n    'use strict';\n\n    angular.module('ws.app').config([\"gravatarServiceProvider\", function(gravatarServiceProvider){\n        gravatarServiceProvider.defaults = {\n          size     : 80,\n          default: 'mm'  // Mystery man as default for missing avatars\n        };\n\n        // Use https endpoint\n        gravatarServiceProvider.secure = true;\n\n        // Force protocol\n        gravatarServiceProvider.protocol = 'https';\n    }]);\n;\n})();","(function (angular, io) {\n'use strict'/*global angular */\nangular.module('ngSails', ['ng']);\n\n/*jslint sloppy:true*/\n/*global angular, io */\nangular.module('ngSails').provider('$sails', function () {\n    var provider = this,\n        httpVerbs = ['get', 'post', 'put', 'delete'],\n        eventNames = ['on', 'once'];\n\n    this.url = undefined;\n    this.interceptors = [];\n\n    this.$get = ['$q', '$timeout', function ($q, $timeout) {\n        var socket = io.sails.connect(provider.url),\n            defer = function () {\n                var deferred = $q.defer(),\n                    promise = deferred.promise;\n\n                promise.success = function (fn) {\n                    promise.then(fn);\n                    return promise;\n                };\n\n                promise.error = function (fn) {\n                    promise.then(null, fn);\n                    return promise;\n                };\n\n                return deferred;\n            },\n            resolveOrReject = function (deferred, data) {\n                // Make sure what is passed is an object that has a status and if that status is no 2xx, reject.\n                if (data && angular.isObject(data) && data.status && Math.floor(data.status / 100) !== 2) {\n                    deferred.reject(data);\n                } else {\n                    deferred.resolve(data);\n                }\n            },\n            angularify = function (cb, data) {\n                $timeout(function () {\n                    cb(data);\n                });\n            },\n            promisify = function (methodName) {\n                socket['legacy_' + methodName] = socket[methodName];\n                socket[methodName] = function (url, data, cb) {\n                    var deferred = defer();\n                    if (cb === undefined && angular.isFunction(data)) {\n                        cb = data;\n                        data = null;\n                    }\n                    deferred.promise.then(cb);\n                    socket['legacy_' + methodName](url, data, function (result) {\n                        resolveOrReject(deferred, result);\n                    });\n                    return deferred.promise;\n                };\n            },\n            wrapEvent = function (eventName) {\n                socket['legacy_' + eventName] = socket[eventName];\n                socket[eventName] = function (event, cb) {\n                    if (cb !== null && angular.isFunction(cb)) {\n                        socket['legacy_' + eventName](event, function (result) {\n                            angularify(cb, result);\n                        });\n                    }\n                };\n            };\n\n        angular.forEach(httpVerbs, promisify);\n        angular.forEach(eventNames, wrapEvent);\n\n        return socket;\n    }];\n});\n}(angular, io));","(function(){\n    'use strict';\n    angular.module('ws.user')\n        .run([\"$rootScope\", \"$state\", \"Auth\", \"AUTH_EVENTS\", function ($rootScope, $state, Auth, AUTH_EVENTS) {\n            $rootScope.$on('$stateChangeStart', function (event, next) {\n                var authorizedRoles = (next.data && next.data.authorizedRoles) ? next.data.authorizedRoles : null;\n                if (authorizedRoles && !Auth.isAuthorized(authorizedRoles)) {\n                    event.preventDefault();\n                    if (!Auth.isAuthenticated()) {\n                        $state.go('welcome');\n                        return;\n                    }\n                }\n                if(next.name === 'welcome' && Auth.isAuthenticated()) {\n                    event.preventDefault();\n                    $state.go('tabs.groups');\n                    return;\n                } \n\n            });\n        }]);\n})();","(function(){\n    'use strict';\n    angular.module('ws.announcement')\n        .constant('ANNOUNCEMENT_TYPES', {\n            calendar: {name: 'Calendar', logo:'ion-calendar'},\n            clock: {name: 'Time', logo:'ion-clock'},\n            coffee: {name: 'Coffee', logo:'ion-coffee'} \n        });\n})();","(function(){\n    'use strict';\n\n    angular.module('ws.announcement')\n        .controller('AddAnnouncementCtrl', [\"$rootScope\", \"$scope\", \"$ionicPopup\", \"$stateParams\", \"ANNOUNCEMENT_TYPES\", \"AnnouncementService\", \"GroupService\", \"RELOAD\", function($rootScope, $scope, $ionicPopup, $stateParams, ANNOUNCEMENT_TYPES, AnnouncementService, GroupService, RELOAD){\n            var vm = this;\n            function _reset() {\n                vm.announcement = {\n                    name: '',\n                    description: '',\n                    logo: ANNOUNCEMENT_TYPES.calendar.logo,\n                    group: {} \n                };\n                vm.title = 'new Announcement';\n            };\n            _reset();\n\n            function _reloadGroup() {\n                GroupService.getGroupById($stateParams.id).then(function(group){\n                    vm.announcement.group = group;\n                });\n            };\n            _reloadGroup();\n            $rootScope.$on(RELOAD.GROUP, _reloadGroup);\n\n            this.add = function(){\n                this.title = 'Please wait...';\n                AnnouncementService.newAnnouncement(vm.announcement).then(function(announcement) {\n                    _reset();\n                    if($scope.addAnnouncementModal) {\n                        $scope.addAnnouncementModal.hide();\n                    }\n                }, function (error) {\n                    self.title = 'new Announcement';\n                    console.log(error);\n                    $ionicPopup.alert({\n                        title: 'Ooops :(',\n                        template: error.message || 'Please try again later...'\n                    });\n                });\n            };\n\n            this.types = ANNOUNCEMENT_TYPES;\n\n            this.cancel = function() {\n                if($scope.addAnnouncementModal) {\n                    $scope.addAnnouncementModal.hide();\n                }\n            };\n\n\n\n\n\n\n        }]);\n})();","(function(){\n    'use strict';\n\n    angular.module('ws.announcement')\n        .controller('AnnouncementDetailCtrl', [\"$rootScope\", \"$stateParams\", \"$ionicScrollDelegate\", \"$ionicActionSheet\", \"$ionicHistory\", \"GroupService\", \"AnnouncementService\", \"UserSession\", \"CommentService\", \"RELOAD\", function(\n                $rootScope,\n                $stateParams, \n                $ionicScrollDelegate, \n                $ionicActionSheet, \n                $ionicHistory, \n                GroupService, \n                AnnouncementService, \n                UserSession,\n                CommentService,\n                RELOAD\n            ){\n            var vm = this;\n            this.announcement = {};\n            this.group = {};\n            this.comments = [];\n\n            this.newComment = '';\n            var user = UserSession.getUser();\n\n            function _reloadGroup() {\n                GroupService.getGroupById($stateParams.groupId).then(function(group){\n                    vm.group = group;\n                });\n            }\n\n            function _reloadAnnouncement() {\n                AnnouncementService.getAnnouncementById($stateParams.announcementId).then(function(announcement){\n                    vm.announcement = announcement;\n                    \n                });\n            }\n\n            function _reloadComments() {\n                CommentService.getCommentsByAnnouncementId($stateParams.announcementId).then(function(comments){\n                    vm.comments = comments;\n                    $ionicScrollDelegate.scrollBottom();\n                });\n                \n            }\n\n            function _reload() {\n                _reloadGroup();\n                _reloadAnnouncement();\n                _reloadComments();\n            }\n\n            $rootScope.$on(RELOAD.GROUP, _reloadGroup);\n            $rootScope.$on(RELOAD.ANNOUNCEMENT, _reloadAnnouncement);\n            $rootScope.$on(RELOAD.COMMENT, function(message, payload){\n                if(payload && payload.data && payload.data.announcement == vm.announcement.id) {\n                    CommentService.getCommentsByAnnouncementId($stateParams.announcementId).then(function(comments){\n                        vm.comments = comments;\n                        $ionicScrollDelegate.scrollBottom();\n                    });\n                }\n                \n            });\n\n            this.edit = function(){\n                var editSheet = $ionicActionSheet.show({\n                    destructiveText: 'Delete',\n                    titleText: 'Edit Announcement',\n                    cancelText: 'Cancel',\n                    destructiveButtonClicked: function(){\n                        AnnouncementService.deleteAnnouncement(vm.announcement).then(function(){\n                            editSheet();\n                            $ionicHistory.goBack();\n                        }, function(){\n                            editSheet();\n                            $ionicPopup.alert({\n                                title: 'Ooops :(',\n                                template: error.message || 'Please try again later...'\n                            });\n                        });\n                    }\n                });\n            };\n\n            this.isCurrentUserComment = function(comment) {\n                return comment.user.id === user.id;\n            };\n\n            this.sendNewComment = function() {\n                var comment = {user: user, text: this.newComment, announcement: this.announcement};\n                CommentService.newComment(comment).then(function(newComment){\n                    vm.newComment = '';\n                });                \n            };\n\n            _reload();\n\n        }]);\n})();","(function(){\n    'use strict';\n\n    angular.module('ws.announcement')\n        .factory('AnnouncementService', [\"$rootScope\", \"$sailsPromised\", \"RELOAD\", function($rootScope, $sailsPromised, RELOAD){\n\n            function getAnnouncementsByGroupId(groupId) {\n                return $sailsPromised.get('/groups/'+groupId+'/announcements');   \n            }\n\n            function getAnnouncementById(id) {\n                return $sailsPromised.get('/announcements/'+id);    \n            }\n\n            function newAnnouncement(announcement){\n                return $sailsPromised.post('/announcements', announcement).then(function(newAnnouncement){\n                    $rootScope.$broadcast(RELOAD.ANNOUNCEMENT, {verb: 'created', data: newAnnouncement});\n                    return newAnnouncement;\n                });\n            }\n\n            function deleteAnnouncement(announcement){\n                return $sailsPromised.delete('/announcements/' + announcement.id).then(function(deletedAnnouncement){\n                    $rootScope.$broadcast(RELOAD.ANNOUNCEMENT, {verb: 'deleted', data: deletedAnnouncement});\n                    return deletedAnnouncement;\n                });  \n            }\n\n            return {\n                getAnnouncementsByGroupId: getAnnouncementsByGroupId,\n                getAnnouncementById: getAnnouncementById,\n                newAnnouncement: newAnnouncement,\n                deleteAnnouncement: deleteAnnouncement\n            };\n        }]);\n})();","(function(){\n    'use strict';\n    angular.module('ws.api')\n        .run([\"$rootScope\", \"$sails\", \"RELOAD\", \"ENTITIES\", function($rootScope, $sails, RELOAD, ENTITIES){\n            $sails.on('connect', function(){\n                angular.forEach(ENTITIES, function(entityName, entityId){\n                    if(RELOAD[entityId]) {\n                        $sails.on(entityName, function(message){\n                            $rootScope.$broadcast(RELOAD[entityId], message);\n                        });\n                    }\n                });\n            });\n        }]);\n})();","(function(){\n    'use strict';\n    angular.module('ws.api')\n        .constant('RELOAD', {\n            ALL: 'reload_all',\n            GROUP: 'reload_group',\n            ANNOUNCEMENT: 'reload_announcement',\n            USER: 'reload_user',\n            COMMENT: 'reload_comment'\n        })\n        .constant('ENTITIES', {\n            GROUP: 'groups',\n            ANNOUNCEMENT: 'announcements',\n            USER: 'users',\n            COMMENT: 'comments'\n        });\n    ;\n})();","(function(){\n    'use strict';\n\n    angular.module('ws.api')\n        .factory('$sailsPromised', [\"$sails\", \"$q\", function($sails, $q){\n            function promised$sailsConnection(method, route, data){\n                var deferred = $q.defer();\n                if(!$sails._raw || !$sails._raw.connected){\n                    $sails.on('connect', function(){\n                        deferred.resolve($sails[method](route, data));\n                    });\n                } else {\n                    deferred.resolve($sails[method](route, data));\n                }\n                return deferred.promise;\n            }\n\n            // expose $sails functions\n            return {\n                get: function(route, data){\n                    return promised$sailsConnection('get', route, data);\n                },\n                post: function(route, data){\n                    return promised$sailsConnection('post', route, data);\n                },\n                put: function(route, data){\n                    return promised$sailsConnection('put', route, data);\n                },\n                delete: function(route, data){\n                    return promised$sailsConnection('delete', route, data);\n                }\n            }\n        }])\n})();","(function(){\n    'use strict';\n\n    (function(){\n    'use strict';\n\n    angular.module('ws.comment')\n        .factory('CommentService', [\"$rootScope\", \"$sailsPromised\", \"RELOAD\", function($rootScope, $sailsPromised, RELOAD) {\n\n            function newComment(comment) {\n                return $sailsPromised.post('/comments', comment).then(function(newComment){\n                    $rootScope.$broadcast(RELOAD.COMMENT, {verb: 'created', data: newComment});\n                    return newComment;\n                });\n            };\n\n            function getCommentsByAnnouncementId(announcementId) {\n                return $sailsPromised.get('/comments', {announcement: announcementId, sort: 'createdAt'});\n            };\n\n            return {\n                newComment: newComment,\n                getCommentsByAnnouncementId: getCommentsByAnnouncementId\n            };\n\n        }])\n    ;\n})();\n})();","(function(){\n    'use strict';\n\n    angular.module('ws.group')\n        .controller('AddGroupCtrl', [\"$q\", \"$scope\", \"$ionicPopup\", \"GroupService\", \"UserSession\", \"UserService\", function($q, $scope, $ionicPopup, GroupService, UserSession, UserService){\n            var vm = this;\n            function _reset() {\n                vm.group = {\n                    name: '',\n                    owner: UserSession.getUser()\n                };\n                vm.title = 'new Group';\n            }\n            _reset();\n\n            this.add = function(){\n                this.title = 'Please wait...';\n                GroupService.newGroup(vm.group).then(function(group) {\n                    \n                    if($scope.addGroupModal) {\n                        UserService\n                            .addUserToGroup(UserSession.getUser(), group.id)\n                            .then(function(){\n                                _reset();\n                                $scope.addGroupModal.hide();\n                            }, function(error){\n                                self.title = 'new Group';\n                                $ionicPopup.alert({\n                                    title: 'Ooops :(',\n                                    template: error.message || 'Please try again later...'\n                                });\n                            });                        \n                    }\n                }, function (error) {\n                    self.title = 'new Group';\n                    $ionicPopup.alert({\n                        title: 'Ooops :(',\n                        template: error.message || 'Please try again later...'\n                    });\n                });\n            };\n\n            this.cancel = function() {\n                if($scope.addGroupModal) {\n                    $scope.addGroupModal.hide();\n                }\n            };\n\n\n\n\n        }]);\n})();","(function(){\n    'use strict';\n\n    angular.module('ws.group')\n        .controller('GroupDetailCtrl', [\"$rootScope\", \"$scope\", \"$stateParams\", \"$ionicActionSheet\", \"$ionicHistory\", \"$ionicPopup\", \"$ionicModal\", \"$ionicListDelegate\", \"GroupService\", \"AnnouncementService\", \"UserService\", \"UserSession\", \"RELOAD\", function(\n                $rootScope,\n                $scope, \n                $stateParams, \n                $ionicActionSheet, \n                $ionicHistory, \n                $ionicPopup, \n                $ionicModal, \n                $ionicListDelegate, \n                GroupService, \n                AnnouncementService, \n                UserService,\n                UserSession,\n                RELOAD\n            ){\n            var vm = this;\n            this.group = {};\n            $scope.group = {};\n\n            this.members = [];\n\n            this.announcements = [];\n\n            this.getMemberNames = function() {\n                var members = [];\n                for(var i = 0; i < this.members.length; i += 1) {\n                    members.push(this.members[i].firstName + ' ' + this.members[i].lastName);\n                }\n                return members;\n            };\n\n            this.delete = function(){\n                var deleteSheet = $ionicActionSheet.show({\n                    destructiveText: 'Delete',\n                    titleText: 'Are you sure?',\n                    cancelText: 'Cancel',\n                    destructiveButtonClicked: function(){\n                        GroupService.deleteGroup(vm.group).then(function(){\n                            deleteSheet();\n                            $ionicHistory.goBack();\n                        }, function(){\n                            deleteSheet();\n                            $ionicPopup.alert({\n                                title: 'Ooops :(',\n                                template: error.message || 'Please try again later...'\n                            });\n                        });\n                    }\n                });\n            };\n\n\n            $ionicModal.fromTemplateUrl('templates/announcement/add.html', {\n                scope: $scope,\n                animation: 'slide-in-up'\n            }).then(function(modal) {\n                $scope.addAnnouncementModal = modal;\n            });\n\n            this.addAnnouncement = function(){\n                if($scope.addAnnouncementModal) {\n                    $scope.addAnnouncementModal.show();\n                } \n            }\n\n            this.canDelete = function() {\n                return vm.isOwner();\n            }\n\n            this.isOwner = function() {\n                return vm.group && vm.group.owner && UserSession.getUser().id === vm.group.owner.id;\n            }\n\n            this.deleteAnnouncement = function(announcement) {\n                var deleteSheet = $ionicActionSheet.show({\n                    destructiveText: 'Delete',\n                    titleText: 'Delete ' + announcement.name + ', are you sure?',\n                    cancelText: 'Cancel',\n                    cancel: function(){\n                        $ionicListDelegate.closeOptionButtons();\n                    },\n                    destructiveButtonClicked: function(){\n                        AnnouncementService.deleteAnnouncement(announcement).then(function(){\n                            deleteSheet();\n                            $ionicListDelegate.closeOptionButtons();\n                        }, function(){\n                            deleteSheet();\n                            $ionicListDelegate.closeOptionButtons();\n                            $ionicPopup.alert({\n                                title: 'Ooops :(',\n                                template: error.message || 'Please try again later...'\n                            });\n                        });\n                    }\n                });\n\n                return true;\n            }\n            \n            function _reloadGroup() {\n                GroupService.getGroupById($stateParams.id).then(function(group){\n                    vm.group = group;\n                    $scope.group = group;\n                });\n            }\n\n            function _reloadAnnouncements() {\n                AnnouncementService.getAnnouncementsByGroupId($stateParams.id).then(function(announcements){\n                    vm.announcements = announcements;\n                });\n            }\n\n            function _reloadMembers() {\n                UserService.getUsersByGroupId($stateParams.id).then(function(members){\n                    vm.members = members;\n                });\n            }\n\n            (function _reload() {\n                _reloadGroup();\n                _reloadAnnouncements();\n                _reloadMembers();                \n            })();\n            $rootScope.$on(RELOAD.GROUP, _reloadGroup);\n            $rootScope.$on(RELOAD.ANNOUNCEMENT, _reloadAnnouncements);\n            $rootScope.$on(RELOAD.USER, _reloadMembers);\n\n        }]);\n})();","(function(){\n    'use strict';\n\n    angular.module('ws.group')\n        .controller('GroupListCtrl', [\"$rootScope\", \"$scope\", \"$ionicModal\", \"$ionicActionSheet\", \"$ionicPopup\", \"$ionicListDelegate\", \"$sails\", \"GroupService\", \"UserService\", \"UserSession\", \"RELOAD\", function(\n            $rootScope,\n            $scope, \n            $ionicModal, \n            $ionicActionSheet, \n            $ionicPopup, \n            $ionicListDelegate, \n            $sails, \n            GroupService,\n            UserService, \n            UserSession,\n            RELOAD\n        ){\n            var vm = this;\n            this.groups = [];\n            this.openAddGroupModal = function(){\n                if($scope.addGroupModal) {\n                    $scope.addGroupModal.show();\n                }                \n            };\n            $ionicModal.fromTemplateUrl('templates/group/add.html', {\n                scope: $scope,\n                animation: 'slide-in-up'\n            }).then(function(modal) {\n                $scope.addGroupModal = modal;\n            });\n\n            this.openSettingsModal = function(){\n                if($scope.settingsModal) {\n                    $scope.settingsModal.show();\n                }                \n            };\n            $ionicModal.fromTemplateUrl('templates/settings.html', {\n                scope: $scope,\n                animation: 'slide-in-up'\n            }).then(function(modal) {\n                $scope.settingsModal = modal;\n            });\n\n            this.canDelete = function(group) {\n                return UserSession.getUser().id == group.owner.id;\n            }\n\n            this.delete = function(group){\n                var deleteSheet = $ionicActionSheet.show({\n                    destructiveText: 'Delete',\n                    titleText: 'Delete ' + group.name +', are you sure?',\n                    cancelText: 'Cancel',\n                    cancel: function(){\n                        $ionicListDelegate.closeOptionButtons();\n                    },\n                    destructiveButtonClicked: function(){\n                        GroupService.deleteGroup(group).then(function(){\n                            deleteSheet();\n                            $ionicListDelegate.closeOptionButtons();\n                            $rootScope.$broadcast(RELOAD.GROUP, {verb: 'deleted', data: group});\n                        }, function(){\n                            deleteSheet();\n                            $ionicPopup.alert({\n                                title: 'Ooops :(',\n                                template: error.message || 'Please try again later...'\n                            });\n                        });\n                    }\n                });\n            };\n\n            function _reload() {\n                GroupService.getGroups().then(function(groups){\n                    vm.groups = groups;\n                });\n            };\n            _reload();\n            $rootScope.$on(RELOAD.GROUP, _reload);\n        }])\n    ;\n})();","(function(){\n    'use strict';\n\n    angular.module('ws.group')\n        .controller('GroupMembersCtrl', [\"$rootScope\", \"$scope\", \"$stateParams\", \"$ionicActionSheet\", \"$ionicListDelegate\", \"$ionicModal\", \"$ionicPopup\", \"GroupService\", \"UserService\", \"UserSession\", \"RELOAD\", function(\n                $rootScope, \n                $scope, \n                $stateParams, \n                $ionicActionSheet, \n                $ionicListDelegate, \n                $ionicModal, \n                $ionicPopup, \n                GroupService, \n                UserService, \n                UserSession,\n                RELOAD\n            ){\n            var vm = this;\n            var currentUser = UserSession.getUser();\n            this.group = {};\n            this.members = [];\n\n            this.isLoggedIn = function(user){\n                return user.id === currentUser.id;\n            }\n\n            this.canDelete = function(user){\n                return !this.isLoggedIn(user) && this.group.owner.id == currentUser.id;\n            }\n\n            this.delete = function(user){\n                var deleteSheet = $ionicActionSheet.show({\n                    destructiveText: 'Remove',\n                    titleText: 'Remove <strong>' + user.firstName + ' ' + user.lastName + '</strong> from this Group?',\n                    cancelText: 'Cancel',\n                    cancel: function(){\n                        $ionicListDelegate.closeOptionButtons();\n                    },\n                    destructiveButtonClicked: function(){\n                        UserService.deleteUserFromGroup(user, vm.group.id).then(function(){\n                            deleteSheet();\n                            $ionicListDelegate.closeOptionButtons();\n                        }, function(){\n                            deleteSheet();\n                            $ionicPopup.alert({\n                                title: 'Ooops :(',\n                                template: error.message || 'Please try again later...'\n                            });\n                        });\n                    }\n                });\n            };\n\n            $ionicModal.fromTemplateUrl('templates/group/members/add.html', {\n                scope: $scope,\n                animation: 'slide-in-up'\n            }).then(function(modal) {\n                $scope.addMembersModal = modal;\n            });\n\n            this.addMembers = function(){\n                if($scope.addMembersModal) {\n                    $scope.addMembersModal.show();\n                } \n            }\n\n            function _reloadGroup() {\n                GroupService.getGroupById($stateParams.id).then(function(group){\n                    vm.group = group;\n                });\n            }\n\n            function _reloadMembers() {\n                UserService.getUsersByGroupId($stateParams.id).then(function(members){\n                    vm.members = members;\n                });\n            }\n\n            function _reload() {\n                _reloadGroup();\n                _reloadMembers();\n            }\n            _reload();\n\n            $rootScope.$on(RELOAD.GROUP, _reloadGroup);\n            $rootScope.$on(RELOAD.USER, _reloadMembers);\n        }]);\n})();","(function(){\n    'use strict';\n\n    angular.module('ws.group')\n        .factory('GroupService', [\"$rootScope\", \"$sailsPromised\", \"RELOAD\", function($rootScope, $sailsPromised,RELOAD) {\n\n            function getGroups() {\n                return $sailsPromised.get(\"/groups\");\n            }\n\n            function getGroupById(id) {\n                return $sailsPromised.get(\"/groups/\"+id);\n            }\n\n            function newGroup(group) {\n                return $sailsPromised.post('/groups', group).then(function(createdGroup){\n                    $rootScope.$broadcast(RELOAD.GROUP,{verb: 'created', data: createdGroup});\n                    return createdGroup;\n                });\n            }\n\n            function deleteGroup(group) {\n                return $sailsPromised.delete('/groups/'+group.id).then(function(deletedGroup){\n                    $rootScope.$broadcast(RELOAD.GROUP,{verb: 'deleted', data: deletedGroup});\n                    return deletedGroup;\n                });\n            }\n\n            return {\n                getGroups: getGroups,\n                getGroupById: getGroupById,\n                newGroup: newGroup,\n                deleteGroup: deleteGroup\n            };\n\n        }])\n    ;\n})();","(function(){\n    angular.module('ws.settings')\n        .constant('SETTINGS', {\n            DARK_MODE: 'darkMode',\n            AUTO_DARK_MODE: 'autoDarkMode'\n        })\n        .constant('THEMES', {\n            DARK: 'dark-mode',\n            LIGHT: 'light-mode'\n        })\n        .constant('SETTINGS_EVENTS', {\n            'SETTINGS_CHANGED': 'settings-changed',\n            'CHECK_THEME': 'check_theme'\n        });\n})();","(function(){\n    'use strict';\n\n    angular.module('ws.settings')\n        .controller('SettingsCtrl', [\"$scope\", \"$state\", \"Auth\", \"UserSession\", \"WsSettings\", \"SETTINGS\", function($scope, $state, Auth, UserSession, WsSettings,SETTINGS){\n            var vm = this;\n            var unBindSettings;\n            var unBindUser;            \n            $scope.SETTINGS = SETTINGS;\n\n            function _unBind() {\n                if(unBindSettings) {\n                    unBindSettings();\n                    unBindSettings = null;\n                }\n                if(unBindUser) {\n                    unBindUser();\n                    unBindUser = null;\n                }\n            }\n\n            function _bind() {\n\n                unBindSettings = WsSettings.bind($scope);\n                unBindUser = UserSession.bindUser($scope);\n                $scope.settings = $scope[WsSettings.getSettingsKey()];\n            }            \n\n            this.logout = function() {\n                Auth.logout();\n                vm.done();\n                $state.go('welcome');\n                \n            };\n            this.done = function() {\n                if($scope.settingsModal) {\n                    $scope.settingsModal.hide();\n                }\n            };\n\n            // Execute action on hide modal\n            $scope.$on('modal.hidden', _unBind);\n            // Execute action on remove modal\n            $scope.$on('modal.removed', _unBind);\n            // Execute action on show modal\n            $scope.$on('modal.shown', _bind);\n\n            $scope.$on('$destroy', function() {\n                if($scope.settingsModal) {\n                    $scope.settingsModal.remove();\n                }\n            });\n\n\n        }]);\n})();","(function(){\n    'use strict';\n\n    angular.module('ws.settings')\n        .service('WsSettings', [\"$rootScope\", \"localStorageService\", \"UserSession\", \"SETTINGS\", \"SETTINGS_EVENTS\", function($rootScope, localStorageService, UserSession, SETTINGS, SETTINGS_EVENTS){\n            var user;\n            var settingsKey;\n            var settings;\n            var self = this;\n\n            function _initSettings(){\n                user = UserSession.getUser()\n                settingsKey = 'settings_' + ((user.username) ? user.username : 'general');\n                settings = localStorageService.get(settingsKey) || null;\n                if(settings == undefined) {\n                    var darkMode = SETTINGS.DARK_MODE;\n                    var autoDark = SETTINGS.AUTO_DARK_MODE;\n                    var settings = {};\n                    settings[darkMode] = false;\n                    settings[autoDark] = true;\n                    localStorageService.set(settingsKey, settings);\n                }else {\n                    $rootScope.$broadcast(SETTINGS_EVENTS.SETTINGS_CHANGED);\n                }\n\n                return settings;\n            }\n\n            settings = _initSettings();\n\n            $rootScope.$on('LocalStorageModule.notification.setitem', function(event, data){\n                if(data.key === settingsKey) {\n                    settings = localStorageService.get(settingsKey);\n                    if(settings) {\n                        $rootScope.$broadcast(SETTINGS_EVENTS.SETTINGS_CHANGED);\n                    }\n                }\n            });\n\n            $rootScope.$on('ws.user.login', function(){\n                _initSettings();\n            });\n\n            $rootScope.$on('ws.user.logout', function(){\n               _initSettings();\n            });\n\n            this.get = function(key) {\n                return localStorageService.get(settingsKey)[key];\n            }\n\n            this.set = function(key, value) {\n                settings[key] = value;\n                localStorageService.set(settingsKey, settings);\n                return this;\n            }\n\n            this.getSettingsKey = function() {\n                return settingsKey;   \n            }\n\n            this.bind = function(scope) {\n                return localStorageService.bind(scope, settingsKey);\n            };\n        }]);\n})();","(function(){\n    'use strict';\n\n    angular.module('ws.settings')\n        .factory('Theme', [\"$document\", \"$rootScope\", \"WsSettings\", \"SETTINGS\", \"THEMES\", \"SETTINGS_EVENTS\", function($document, $rootScope, WsSettings, SETTINGS, THEMES, SETTINGS_EVENTS){\n            var self = this;\n            this.checkTheme = function() {\n                var body = angular.element($document[0].body);\n                var theme = self.getThemeClass();\n                if(!body.hasClass(theme)){\n                    body.removeClass(THEMES.LIGHT);\n                    body.removeClass(THEMES.DARK);\n                    body.addClass(theme);\n                }\n            }\n\n            this.getThemeClass = function() {\n                var isDarkMode = WsSettings.get(SETTINGS.DARK_MODE);\n                //check if auto dark mode\n                if(!isDarkMode) {\n\n                }\n\n                return (isDarkMode) ? THEMES.DARK : THEMES.LIGHT;\n            }\n\n            $rootScope.$on(SETTINGS_EVENTS.SETTINGS_CHANGED, function(event, currentSettings){\n                self.checkTheme();\n            });\n\n            $rootScope.$on(SETTINGS_EVENTS.CHECK_THEME, function(){\n                self.checkTheme();\n            });\n\n            return this;\n\n        }]);\n})();","(function(){\n    'use strict';\n    angular.module('ws.user')\n        .constant('AUTH_EVENTS', {\n            loginSuccess:           'auth-login-success',\n            loginFailed:            'auth-login-failed',\n            logoutSuccess:          'auth-logout-success',\n            sessionTimeout:         'auth-session-timeout',\n            notAuthenticated:       'auth-not-authenticated',\n            notAuthorized:          'auth-not-authorized'\n        });\n})();","(function(){\n    'use strict';\n\n    angular.module('ws.user')\n        .constant('USER_ROLES', {\n            all:        '*',\n            admin:      'admin',\n            teacher:    'teacher',\n            student:    'student',\n        });\n})();","(function(){\n    'use strict';\n\n    angular.module('ws.user')\n        .controller('AclCtrl', [\"$rootScope\", \"Auth\", \"USER_ROLES\", function($rootScope, Auth, USER_ROLES){\n            var vm = this;\n\n            vm.isAuthorized = function(groups) {\n                return Auth.isAuthorized(groups);\n            };\n\n            vm.isAdmin = function() {\n                return Auth.isAuthorized([USER_ROLES.admin]);\n            };\n\n            vm.isTeacher = function() {\n                return Auth.isAuthorized([USER_ROLES.teacher, USER_ROLES.admin])\n            };\n\n            vm.isStudent = function() {\n                return Auth.isAuthorized(USER_ROLES.student, USER_ROLES.teacher, USER_ROLES.admin);\n            };\n            vm.USER_ROLES = USER_ROLES;\n        }]);\n})();","(function(){\n    'use strict';\n    angular.module('ws.user')\n        .controller('LoginCtrl', [\"$rootScope\", \"$scope\", \"$ionicPopup\", \"AUTH_EVENTS\", \"Auth\", function LoginCtrl($rootScope, $scope, $ionicPopup, AUTH_EVENTS, Auth){\n            this.credentials = {\n                email: '',\n                password: ''\n            };\n            this.title = 'Login';\n            var self = this;\n            this.login = function(){\n                this.title = 'Please wait...';\n                Auth.login(this.credentials).then(function(user) {\n                    self.title = 'Login';\n                    self.credentials = {\n                        email: '',\n                        password: ''\n                    };\n                    if($scope.loginModal) {\n                        $scope.loginModal.hide();\n                    }\n                }, function (error) {\n                    self.title = 'Login';\n                    $ionicPopup.alert({\n                        title: 'Ooops :(',\n                        template: error.message || 'Please try again later...'\n                    });\n                });\n            };\n\n            this.cancel = function() {\n                if($scope.loginModal) {\n                    $scope.loginModal.hide();\n                }\n            };\n\n        }]);\n})();","(function(){\n    'use strict';\n    angular.module('ws.user')\n        .controller('RegisterCtrl', [\"$rootScope\", \"$scope\", \"$ionicPopup\", \"AUTH_EVENTS\", \"Auth\", \"USER_ROLES\", function LoginCtrl($rootScope, $scope, $ionicPopup, AUTH_EVENTS, Auth, USER_ROLES){\n            this.credentials = {};\n            this.title = '';\n            this.roles = USER_ROLES;\n            var self = this;\n            this.register = function(){\n                this.title = 'Please wait...';\n                Auth.register(this.credentials).then(function(user) {\n                    _init();\n                    if($scope.registerModal) {\n                        $scope.registerModal.hide();\n                    }\n                }, function (error) {\n                    $ionicPopup.alert({\n                        title: 'Ooops :(',\n                        template: error.message || 'Please try again later...'\n                    });\n                });\n            };\n\n            this.cancel = function() {\n                if($scope.registerModal) {\n                    $scope.registerModal.hide();\n                }\n            };\n\n            function _init(){\n                self.credentials = {\n                    firstName: '',\n                    lastName: '',\n                    email: '',\n                    username: '',\n                    password: '',\n                    role: 'student'\n                };\n                self.title = 'Register';\n            }\n            _init();\n\n        }]);\n})();","(function(){\n    'use strict';\n\n    angular.module('ws.user')\n        .controller('WelcomeCtrl', [\"$scope\", \"$state\", \"$ionicModal\", \"Auth\", function($scope, $state, $ionicModal, Auth){\n            this.openLogin = function(){\n                $scope.loginModal.show();\n            };\n            this.openRegister = function(){\n                $scope.registerModal.show();\n            };\n            //Login\n            $ionicModal.fromTemplateUrl('templates/user/login.html', {\n                scope: $scope,\n                animation: 'slide-in-up'\n            }).then(function(modal) {\n                $scope.loginModal = modal;\n            });\n\n            //Register\n            $ionicModal.fromTemplateUrl('templates/user/register.html', {\n                scope: $scope,\n                animation: 'slide-in-up'\n            }).then(function(modal) {\n                $scope.registerModal = modal;\n            });\n\n            $scope.$on('$destroy', function() {\n                $scope.loginModal.remove();\n                $scope.registerModal.remove();\n            });\n\n\n\n            // Execute action on hide modal\n            $scope.$on('modal.hidden', function() {\n                if(Auth.isAuthenticated()) {\n                    $state.go('tabs.groups');\n                }\n            });\n            // Execute action on remove modal\n            $scope.$on('loginModal.removed', function() {\n            // Execute action\n            });\n\n        }]);\n})();","(function(){\n    'use strict';\n\n    angular.module('ws.user')\n        .factory('Auth', [\"$rootScope\", \"$http\", \"$q\", \"$timeout\", \"$sailsPromised\", \"$ionicHistory\", \"UserSession\", \"UserService\", \"USER_ROLES\", function ($rootScope, $http, $q, $timeout, $sailsPromised, $ionicHistory, UserSession, UserService, USER_ROLES) {\n            var authService = {};\n\n            authService.login = function (credentials) {\n                //TODO: Implement Login Authenticate\n                var deferred = $q.defer();\n                $sailsPromised.get('/users', {email: credentials.email}).then(function(users){\n                    if(users.length === 0) {\n                        deferred.reject({message: 'No User found...'});\n                    }else {\n                        var user = users[0];\n                        UserSession.create(user);\n                        deferred.resolve(user);\n                    }\n                }, function(error){\n                    deferred.reject(error);\n                })\n\n                deferred.promise.then(function(user){\n                    $rootScope.$broadcast('ws.user.login', user);\n                });\n\n                return deferred.promise;\n            };\n\n            authService.register = function(credentials) {\n                var deferred = $q.defer();\n                UserService.newUser(credentials).then(function(){\n                    authService.login({email: credentials.email, password: credentials.password}).then(function(user){\n                        deferred.resolve(user);\n                    }, deferred.reject);\n                }, deferred.reject);\n                return deferred.promise;                \n            };\n\n            authService.logout = function(){\n                $ionicHistory.clearCache();\n                var result = UserSession.destroy()\n                $rootScope.$broadcast('ws.user.logout');\n                return result;\n            };\n\n            authService.isAuthenticated = function () {\n                return !!UserSession.getUser().username;\n            };\n\n            authService.isAuthorized = function (authorizedRoles) {\n                if (!angular.isArray(authorizedRoles)) {\n                  authorizedRoles = [authorizedRoles];\n                }\n                return (authService.isAuthenticated() && authorizedRoles.indexOf(UserSession.getUser().role) !== -1);\n            };\n\n            return authService;\n        }]);\n})();","(function(){\n    'use strict';\n\n     angular.module('ws.group')\n        .factory('UserService', [\"$rootScope\", \"$sailsPromised\", \"RELOAD\", function($rootScope, $sailsPromised, RELOAD){\n\n            function getUsers() {\n                return $sailsPromised.get('/users');\n            }\n\n            function getUsersByGroupId(groupId) {\n                return $sailsPromised.get('/groups/' + groupId + '/members')\n            }\n\n            function newUser(user) {\n                return $sailsPromised.post('/users', user).then(function(newUser){\n                    $rootScope.$broadcast(RELOAD.USER, {verb: 'created', data: newUser});\n                    return newUser;\n                });\n            }\n\n            function deleteUser(user) {\n                return $sailsPromised.delete('/users/' + user.id).then(function(deletedUser){\n                    $rootScope.$broadcast(RELOAD.USER, {verb: 'deleted', data: deletedUser});\n                    return deletedUser;\n                });\n            }\n\n            function getUserById(id) {\n                return $sailsPromised.get('/users/'+id);\n            }\n\n            function deleteUserFromGroup(user, groupId) {\n                return $sailsPromised.delete('/groups/'+ groupId + '/members/' + user.id).then(function(deletedUser){\n                    $rootScope.$broadcast(RELOAD.USER);\n                    return deletedUser;\n                });;\n            }\n\n            function addUserToGroup(user, groupId) {\n                return $sailsPromised.post('/groups/'+ groupId + '/members/' + user.id).then(function(newUser){\n                    $rootScope.$broadcast(RELOAD.USER, {verb: 'created', data: newUser});\n                    return newUser;\n                });\n            }\n\n            return {\n                getUsers: getUsers,\n                newUser: newUser,\n                deleteUser: deleteUser,\n                getUsersByGroupId: getUsersByGroupId,\n                getUserById: getUserById,\n                deleteUserFromGroup: deleteUserFromGroup,\n                addUserToGroup: addUserToGroup\n            };\n        }]);\n})();","(function(){\n    'use strict';\n\n    angular.module('ws.user')\n        .service('UserSession', [\"$rootScope\", \"localStorageService\", function($rootScope, localStorageService){\n            var _userProps = ['firstName', 'lastName', 'email', 'username', 'role'];\n            var user;\n            this.getUser = function() {\n                if(user === undefined) {\n                    user = localStorageService.get('user') || {};\n                }\n                return user;\n            };\n\n            $rootScope.$on('LocalStorageModule.notification.setitem', function(event, data){\n                if(data.key === 'user') {\n                    user = localStorageService.get('user');\n                }\n            });\n\n\n            this.bindUser = function(scope) {\n                return localStorageService.bind(scope, 'user');\n            }\n\n            this.create = function (user) {\n                this.destroy();\n                localStorageService.set('user', user);\n                return this.getUser();\n            };\n            this.destroy = function () {\n                user = undefined;\n                localStorageService.set('user', {});\n            };\n            return this;\n        }]);\n})();","(function(){\n    'use strict';\n\n    angular.module('ws.group')\n        .controller('AddMembersCtrl', [\"$rootScope\", \"$scope\", \"$q\", \"$stateParams\", \"$ionicPopup\", \"UserService\", \"GroupService\", \"RELOAD\", function(\n                $rootScope, \n                $scope, \n                $q, \n                $stateParams, \n                $ionicPopup, \n                UserService, \n                GroupService,\n                RELOAD\n            ){\n            var vm = this;\n            vm.group = {};\n            vm.members = [];\n            vm.users = [];\n\n            function _reset() {\n                vm.title = 'add Members';\n            }\n\n            function _reloadGroup() {\n                GroupService.getGroupById($stateParams.id).then(function(group){\n                    vm.group = group;\n                });\n            }\n\n            function _reloadMembers() {\n                $q.all([UserService.getUsers(), UserService.getUsersByGroupId($stateParams.id)]).then(function(results){\n                    vm.users = results[0];\n                    vm.members = results[1];\n                    var isInGroup = {};\n                    for(var i in vm.members) {\n                        isInGroup[vm.members[i].id] = true;\n                    }\n\n                    angular.forEach(vm.users, function(user, key){\n                        vm.users[key].isInGroup = !!isInGroup[user.id] || !!vm.users[key].isInGroup;\n                        vm.users[key].wasInGroup = !!isInGroup[user.id];\n                    })\n                });\n            }\n\n            function _reload() {\n                _reloadGroup();\n                _reloadMembers();\n            }\n\n            _reset();\n            _reload();\n\n            $rootScope.$broadcast(RELOAD.USER, _reloadMembers);\n            $rootScope.$broadcast(RELOAD.GROUP, _reloadGroup);\n\n            this.add = function(){\n                this.title = 'Please wait...';\n                var usersAddToGroup = []\n                var user;\n                for(var i = 0; i < vm.users.length; i++) {\n                    user = vm.users[i];\n                    if(user.isInGroup && !user.wasInGroup){\n                        usersAddToGroup.push(UserService.addUserToGroup(user, vm.group.id));\n                    }\n                }\n                $q.all(usersAddToGroup).then(function(){\n                    _reset();\n                    if($scope.addMembersModal) {\n                        $scope.addMembersModal.hide();\n                    }\n                }, function(error){\n                    self.title = 'add Members';\n                    $ionicPopup.alert({\n                        title: 'Ooops :(',\n                        template: error.message || 'Please try again later...'\n                    });\n                });\n\n            };\n\n            this.cancel = function() {\n                if($scope.addMembersModal) {\n                    $scope.addMembersModal.hide();\n                }\n            };\n\n        }]);\n})();"],"sourceRoot":"/source/"}