{"version":3,"sources":["app.module.js","announcement/announcement.module.js","group/group.module.js","settings/settings.module.js","user/user.module.js","app.routes.js","gravatar.config.js","user/routeObserver.run.js","announcement/constant/types.constant.js","announcement/controller/add.controller.js","announcement/controller/detail.controller.js","announcement/factory/announcement.factory.js","group/controller/add.controller.js","group/controller/detail.controller.js","group/controller/list.controller.js","group/controller/members.controller.js","group/factory/group.factory.js","settings/controller/settings.controller.js","user/constant/auth.constant.js","user/constant/roles.constant.js","user/controller/acl.controller.js","user/controller/login.controller.js","user/controller/register.controller.js","user/controller/welcome.controller.js","user/factory/auth.factory.js","user/factory/user.factory.js","user/service/userSession.service.js","group/controller/members/add.controller.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrzGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvhIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClhIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnjJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.min.js","sourcesContent":["(function(){\n\n'use strict';\n\nangular.module('ws.app', ['ionic', 'ngCordova', 'LocalStorageModule', 'ui.gravatar', 'ws.group', 'ws.announcement', 'ws.user', 'ws.settings'])\n    .config([\"$ionicConfigProvider\", function($ionicConfigProvider) {\n      $ionicConfigProvider.platform.android.backButton.icon('ion-ios7-arrow-back');\n    }])\n    .run([\"$ionicPlatform\", \"$cordovaStatusbar\", function($ionicPlatform, $cordovaStatusbar) {\n          $ionicPlatform.ready(function() {\n            // Hide the accessory bar by default (remove this to show the accessory bar above the keyboard\n            // for form inputs)\n            if(window.cordova && window.cordova.plugins.Keyboard) {\n              cordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);\n              cordova.plugins.Keyboard.disableScroll(true);\n            }\n            if(window.StatusBar) {\n              // org.apache.cordova.statusbar required\n              $cordovaStatusbar.styleColor('white');\n            }\n        });\n    }]);\n\n})();","(function(){\n    'use strict';\n\n    angular.module('ws.announcement', ['ionic', 'ws.user']);\n})();","(function() {\n    'use strict';\n\n    angular.module('ws.group', ['ionic', 'ws.announcement', 'ws.user']);\n})();","(function(){\n    'use strict';\n\n    angular.module('ws.settings', ['ionic', 'ui.gravatar', 'ws.user']);\n})();","(function(){\n    'use strict';\n    angular.module('ws.user', ['ionic', 'LocalStorageModule']);\n})();","(function(){\n    'use strict';\n\n    angular.module('ws.app')\n        .config([\"$stateProvider\", \"$urlRouterProvider\", \"USER_ROLES\", function($stateProvider, $urlRouterProvider, USER_ROLES) {\n            $stateProvider\n                .state('tabs', {\n                    url: '/tabs',\n                    abstract: true,\n                    templateUrl: 'templates/tabs.html',\n                    data: {\n                        authorizedRoles: [USER_ROLES.student, USER_ROLES.admin]\n                    }\n                })\n                .state('tabs.groups', {\n                    url: '/groups',\n                    views: {\n                        'tab-groups': {\n                            templateUrl: 'templates/group/list.html',\n                            controller: 'GroupListCtrl as ctrl'\n                        }\n                    }\n                    \n                })\n                .state('tabs.groups-announcement', {\n                    url: '/groups/:groupId/announcement/:announcementId',\n                    views: {\n                        'tab-groups': {\n                            templateUrl: 'templates/announcement/detail.html',\n                            controller: 'AnnouncementDetailCtrl as ctrl'\n                        }\n                    }\n                    \n                })\n                .state('tabs.groups-detail', {\n                    url: '/groups/:id',\n                    views: {\n                        'tab-groups': {\n                            templateUrl: 'templates/group/detail.html',\n                            controller: 'GroupDetailCtrl as ctrl'\n                        }\n                    }\n                    \n                })\n                .state('tabs.groups-members', {\n                    url: '/groups/:id/members',\n                    views: {\n                        'tab-groups': {\n                            templateUrl: 'templates/group/members.html',\n                            controller: 'GroupMembersCtrl as ctrl'\n                        }\n                    }\n                })\n                .state('tabs.settings', {\n                    url: '/settings',\n                    views: {\n                        'tab-settings': {\n                            templateUrl: 'templates/settings.html',\n                            controller: 'SettingsCtrl as ctrl'\n                        }\n                    }\n                })\n                .state('welcome', {\n                    url: '/welcome',\n                    templateUrl: 'templates/welcome.html',\n                    controller: 'WelcomeCtrl as ctrl'\n                })\n            ;\n            \n            $urlRouterProvider.otherwise( function($injector, $location) {\n                var $state = $injector.get('$state');\n                $state.go('welcome');\n            });\n        }]);\n})();","(function(){\n    'use strict';\n\n    angular.module('ws.app').config([\"gravatarServiceProvider\", function(gravatarServiceProvider){\n        gravatarServiceProvider.defaults = {\n          size     : 80,\n          default: 'mm'  // Mystery man as default for missing avatars\n        };\n\n        // Use https endpoint\n        gravatarServiceProvider.secure = true;\n\n        // Force protocol\n        gravatarServiceProvider.protocol = 'https';\n    }]);\n})();","(function(){\n    'use strict';\n    angular.module('ws.user')\n        .run([\"$rootScope\", \"$state\", \"Auth\", \"AUTH_EVENTS\", function ($rootScope, $state, Auth, AUTH_EVENTS) {\n            $rootScope.$on('$stateChangeStart', function (event, next) {\n                var authorizedRoles = (next.data && next.data.authorizedRoles) ? next.data.authorizedRoles : null;\n                if (authorizedRoles && !Auth.isAuthorized(authorizedRoles)) {\n                    event.preventDefault();\n                    if (!Auth.isAuthenticated()) {\n                        $state.go('welcome');\n                        return;\n                    }\n                }\n                if(next.name === 'welcome' && Auth.isAuthenticated()) {\n                    event.preventDefault();\n                    $state.go('tabs.groups');\n                    return;\n                } \n\n            });\n        }]);\n})();","(function(){\n    'use strict';\n    angular.module('ws.announcement')\n        .constant('ANNOUNCEMENT_TYPES', {\n            calendar: {name: 'Calendar', logo:'ion-calendar'},\n            clock: {name: 'Time', logo:'ion-clock'},\n            coffee: {name: 'Coffee', logo:'ion-coffee'} \n        });\n})();","(function(){\n    'use strict';\n\n    angular.module('ws.announcement')\n        .controller('AddAnnouncementCtrl', [\"$scope\", \"$ionicPopup\", \"ANNOUNCEMENT_TYPES\", \"AnnouncementService\", function($scope, $ionicPopup, ANNOUNCEMENT_TYPES, AnnouncementService){\n            var vm = this;\n            function _reset() {\n                vm.announcement = {\n                    name: '',\n                    description: '',\n                    logo: ANNOUNCEMENT_TYPES.calendar.logo,\n                    group: $scope.group\n                };\n                vm.title = 'new Announcement';\n            }\n            _reset();\n\n            this.add = function(){\n                this.title = 'Please wait...';\n                AnnouncementService.newAnnouncement(vm.Announcement).then(function(Announcement) {\n                    _reset();\n                    if($scope.addAnnouncementModal) {\n                        $scope.addAnnouncementModal.hide();\n                    }\n                }, function (error) {\n                    self.title = 'new Announcement';\n                    $ionicPopup.alert({\n                        title: 'Ooops :(',\n                        template: error.message || 'Please try again later...'\n                    });\n                });\n            };\n\n            this.types = ANNOUNCEMENT_TYPES;\n\n            this.cancel = function() {\n                if($scope.addAnnouncementModal) {\n                    $scope.addAnnouncementModal.hide();\n                }\n            };\n\n\n        }]);\n})();","(function(){\n    'use strict';\n\n    angular.module('ws.announcement')\n        .controller('AnnouncementDetailCtrl', [\"$stateParams\", \"$ionicScrollDelegate\", \"$ionicActionSheet\", \"$ionicHistory\", \"GroupService\", \"AnnouncementService\", \"UserSession\", function($stateParams, $ionicScrollDelegate, $ionicActionSheet, $ionicHistory, GroupService, AnnouncementService, UserSession){\n            var vm = this;\n            this.announcement = {};\n            this.group = {};\n\n            this.newComment = '';\n            var user = UserSession.getUser();\n\n            \n\n            function _reload() {\n                GroupService.getGroupById($stateParams.groupId).then(function(group){\n                    vm.group = group;\n                });\n                AnnouncementService.getAnnouncementById($stateParams.id).then(function(announcement){\n                    vm.announcement = announcement;\n                    $ionicScrollDelegate.scrollBottom();\n                });\n            }\n\n            this.edit = function(){\n                var editSheet = $ionicActionSheet.show({\n                    destructiveText: 'Delete',\n                    titleText: 'Edit Announcement',\n                    cancelText: 'Cancel',\n                    destructiveButtonClicked: function(){\n                        AnnouncementService.deleteAnnouncement(vm.announcement).then(function(){\n                            editSheet();\n                            $ionicHistory.goBack();\n                        }, function(){\n                            editSheet();\n                            $ionicPopup.alert({\n                                title: 'Ooops :(',\n                                template: error.message || 'Please try again later...'\n                            });\n                        });\n                    }\n                });\n            };\n\n            this.isCurrentUserComment = function(comment) {\n                return comment.user.id === user.id;\n            };\n\n            this.sendNewComment = function() {\n                var comment = {user: user, content: this.newComment};\n                if(this.announcement.comments) {\n                    this.announcement.comments.push(comment);\n                    this.newComment = '';\n                }\n                $ionicScrollDelegate.scrollBottom();\n            };\n\n            _reload();\n\n        }]);\n})();","(function(){\n    'use strict';\n\n    angular.module('ws.announcement')\n        .factory('AnnouncementService', [\"$q\", \"$timeout\", \"UserSession\", function($q, $timeout, UserSession){\n\n            var user = UserSession.user;\n\n            function getAnnouncementsByGroupId(groupId) {\n                //TODO: Implement Real Api\n                var deferred = $q.defer();\n                $timeout(function(){\n                    var announcements = [\n                        {\n                            id: 1,\n                            logo: 'ion-calendar',\n                            name: 'Announcement 1'\n                        },\n                        {\n                            id: 2,\n                            logo: 'ion-clock',\n                            name: 'Announcement 2'\n                        },\n                        {\n                            id: 3,\n                            logo: 'ion-coffee',\n                            name: 'Announcement 3'\n                        }\n                    ];\n                    deferred.resolve(announcements);\n                }, 1000);\n                return deferred.promise;\n            }\n\n            function getAnnouncementById(id) {\n                //TODO: Implement Real Api\n                var deferred = $q.defer();\n                $timeout(function(){\n                    var announcement ={\n                        id: 1,\n                        groupId: 1,\n                        logo: 'ion-calendar',\n                        name: 'Announcement 1',\n                        description: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys' + \n                        'standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make' +\n                        'a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining' +\n                        'essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum' +\n                        'passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.',\n                        comments: [\n                            {\n                                content: 'Cool',\n                                user: { id: 4, firstName: 'John', lastName: 'Doe'}\n                            },\n                            {\n                                content: 'Awesome!!!',\n                                user: { id: 4, firstName: 'John', lastName: 'Doe'}\n                            }, \n                            {\n                                content: 'Super',\n                                user: { id: 4, firstName: 'John', lastName: 'Doe'}\n                            },                        \n                            {\n                                content: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys' + \n                        'standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make' +\n                        'a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining' +\n                        'essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum' +\n                        'passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.',\n                                user: { id: 4, firstName: 'John', lastName: 'Doe'}\n                            },\n                            {\n                                content: 'Shiiit!',\n                                user: { id: 1, firstName: 'Thomas', lastName: 'Hampe'}\n                            },     \n                        ]            \n                    };\n\n                    deferred.resolve(announcement);    \n                }, 1000);\n                return deferred.promise;\n            }\n\n            function newAnnouncement(announcement){\n                //TODO: Implement Real Api\n                var deferred = $q.defer();\n                $timeout(function(){\n                    deferred.resolve(announcement);\n                },1000);\n                return deferred.promise;\n            }\n\n            function deleteAnnouncement(announcement){\n                var deferred = $q.defer();\n                $timeout(function(){\n                    deferred.resolve(announcement);\n                },1000);\n                return deferred.promise;   \n            }\n\n            return {\n                getAnnouncementsByGroupId: getAnnouncementsByGroupId,\n                getAnnouncementById: getAnnouncementById,\n                newAnnouncement: newAnnouncement,\n                deleteAnnouncement: deleteAnnouncement\n            };\n        }]);\n})();","(function(){\n    'use strict';\n\n    angular.module('ws.group')\n        .controller('AddGroupCtrl', [\"$scope\", \"$ionicPopup\", \"GroupService\", \"UserSession\", function($scope, $ionicPopup, GroupService, UserSession){\n            var vm = this;\n            function _reset() {\n                vm.group = {\n                    name: '',\n                    owner: UserSession.getUser()\n                };\n                vm.title = 'new Group';\n            }\n            _reset();\n\n            this.add = function(){\n                this.title = 'Please wait...';\n                GroupService.newGroup(vm.group).then(function(group) {\n                    _reset();\n                    if($scope.addGroupModal) {\n                        $scope.addGroupModal.hide();\n                    }\n                }, function (error) {\n                    self.title = 'new Group';\n                    $ionicPopup.alert({\n                        title: 'Ooops :(',\n                        template: error.message || 'Please try again later...'\n                    });\n                });\n            };\n\n            this.cancel = function() {\n                if($scope.addGroupModal) {\n                    $scope.addGroupModal.hide();\n                }\n            };\n\n\n        }]);\n})();","(function(){\n    'use strict';\n\n    angular.module('ws.group')\n        .controller('GroupDetailCtrl', [\"$scope\", \"$stateParams\", \"$ionicActionSheet\", \"$ionicHistory\", \"$ionicPopup\", \"$ionicModal\", \"$ionicListDelegate\", \"GroupService\", \"AnnouncementService\", \"UserService\", function(\n                $scope, \n                $stateParams, \n                $ionicActionSheet, \n                $ionicHistory, \n                $ionicPopup, \n                $ionicModal, \n                $ionicListDelegate, \n                GroupService, \n                AnnouncementService, \n                UserService\n            ){\n            var vm = this;\n            this.group = {};\n\n            this.members = [];\n\n            this.announcements = [];\n\n            this.getMemberNames = function() {\n                var members = [];\n                for(var i = 0; i < this.members.length; i += 1) {\n                    members.push(this.members[i].firstName + ' ' + this.members[i].lastName);\n                }\n                return members;\n            };\n\n            this.delete = function(){\n                var deleteSheet = $ionicActionSheet.show({\n                    destructiveText: 'Delete',\n                    titleText: 'Are you sure?',\n                    cancelText: 'Cancel',\n                    destructiveButtonClicked: function(){\n                        GroupService.deleteGroup(vm.group).then(function(){\n                            deleteSheet();\n                            $ionicHistory.goBack();\n                        }, function(){\n                            deleteSheet();\n                            $ionicPopup.alert({\n                                title: 'Ooops :(',\n                                template: error.message || 'Please try again later...'\n                            });\n                        });\n                    }\n                });\n            };\n\n            this.edit = function(){\n                var editSheet = $ionicActionSheet.show({\n                    buttons: [\n                       { text: 'Add <strong>Announcement</strong> ' }\n                    ],\n                    destructiveText: 'Delete',\n                    titleText: 'Edit Group',\n                    cancelText: 'Cancel',\n                    destructiveButtonClicked: function(){\n                        editSheet();\n                        vm.delete();\n                    },\n                    buttonClicked: function(index) {\n                        if(index == 0) {\n                            vm.addAnnouncement();\n                        }\n                        return true;\n                    }\n                });\n            };\n\n\n            $ionicModal.fromTemplateUrl('templates/announcement/add.html', {\n                scope: $scope,\n                animation: 'slide-in-up'\n            }).then(function(modal) {\n                $scope.addAnnouncementModal = modal;\n            });\n\n            this.addAnnouncement = function(){\n                if($scope.addAnnouncementModal) {\n                    $scope.addAnnouncementModal.show();\n                } \n            }\n\n            this.deleteAnnouncement = function(announcement) {\n                var deleteSheet = $ionicActionSheet.show({\n                    destructiveText: 'Delete',\n                    titleText: 'Delete ' + announcement.name + ', are you sure?',\n                    cancelText: 'Cancel',\n                    cancel: function(){\n                        $ionicListDelegate.closeOptionButtons();\n                    },\n                    destructiveButtonClicked: function(){\n                        AnnouncementService.deleteAnnouncement(announcement).then(function(){\n                            deleteSheet();\n                            $ionicListDelegate.closeOptionButtons();\n                        }, function(){\n                            deleteSheet();\n                            $ionicListDelegate.closeOptionButtons();\n                            $ionicPopup.alert({\n                                title: 'Ooops :(',\n                                template: error.message || 'Please try again later...'\n                            });\n                        });\n                    }\n                });\n\n                return true;\n            }\n            \n\n            function _reload() {\n                GroupService.getGroupById($stateParams.id).then(function(group){\n                    vm.group = group;\n                    $scope.group = group;\n                });\n                AnnouncementService.getAnnouncementsByGroupId($stateParams.id).then(function(announcements){\n                    vm.announcements = announcements;\n                });\n                UserService.getUsersByGroupId($stateParams.id).then(function(members){\n                    vm.members = members;\n                });\n            }\n            _reload();\n\n        }]);\n})();","(function(){\n    'use strict';\n\n    angular.module('ws.group')\n        .controller('GroupListCtrl', [\"$scope\", \"$ionicModal\", \"$ionicActionSheet\", \"$ionicPopup\", \"$ionicListDelegate\", \"GroupService\", \"UserSession\", function($scope, $ionicModal, $ionicActionSheet, $ionicPopup, $ionicListDelegate, GroupService, UserSession){\n            var vm = this;\n            this.groups = [];\n            this.openAddGroupModal = function(){\n                if($scope.addGroupModal) {\n                    $scope.addGroupModal.show();\n                }                \n            };\n            $ionicModal.fromTemplateUrl('templates/group/add.html', {\n                scope: $scope,\n                animation: 'slide-in-up'\n            }).then(function(modal) {\n                $scope.addGroupModal = modal;\n            });\n\n            this.openSettingsModal = function(){\n                if($scope.settingsModal) {\n                    $scope.settingsModal.show();\n                }                \n            };\n            $ionicModal.fromTemplateUrl('templates/settings.html', {\n                scope: $scope,\n                animation: 'slide-in-up'\n            }).then(function(modal) {\n                $scope.settingsModal = modal;\n            });\n\n            this.canDelete = function(group) {\n                return UserSession.getUser().id == group.owner.id;\n            }\n\n            this.delete = function(group){\n                var deleteSheet = $ionicActionSheet.show({\n                    destructiveText: 'Delete',\n                    titleText: 'Delete ' + group.name +', are you sure?',\n                    cancelText: 'Cancel',\n                    cancel: function(){\n                        $ionicListDelegate.closeOptionButtons();\n                    },\n                    destructiveButtonClicked: function(){\n                        GroupService.deleteGroup(group).then(function(){\n                            deleteSheet();\n                            $ionicListDelegate.closeOptionButtons();\n                        }, function(){\n                            deleteSheet();\n                            $ionicPopup.alert({\n                                title: 'Ooops :(',\n                                template: error.message || 'Please try again later...'\n                            });\n                        });\n                    }\n                });\n            };\n\n            function _reload() {\n                GroupService.getGroups().then(function(groups){\n                    vm.groups = groups;\n                });\n            }\n            _reload();\n        }])\n    ;\n})();","(function(){\n    'use strict';\n\n    angular.module('ws.group')\n        .controller('GroupMembersCtrl', [\"$scope\", \"$stateParams\", \"$ionicActionSheet\", \"$ionicListDelegate\", \"$ionicModal\", \"$ionicPopup\", \"GroupService\", \"UserService\", \"UserSession\", function($scope, $stateParams, $ionicActionSheet, $ionicListDelegate, $ionicModal, $ionicPopup, GroupService, UserService, UserSession){\n            var vm = this;\n            var currentUser = UserSession.getUser();\n            this.group = {};\n            this.memebrs = [];\n\n            this.isLoggedIn = function(user){\n                return user.id === currentUser.id;\n            }\n\n            this.canDelete = function(user){\n                return !this.isLoggedIn(user) && this.group.owner.id == currentUser.id;\n            }\n\n            this.delete = function(user){\n                var deleteSheet = $ionicActionSheet.show({\n                    destructiveText: 'Remove',\n                    titleText: 'Remove <strong>' + user.firstName + ' ' + user.lastName + '</strong> from this Group?',\n                    cancelText: 'Cancel',\n                    cancel: function(){\n                        $ionicListDelegate.closeOptionButtons();\n                    },\n                    destructiveButtonClicked: function(){\n                        UserService.deleteUserFromGroup(user, vm.group.id).then(function(){\n                            deleteSheet();\n                            $ionicListDelegate.closeOptionButtons();\n                        }, function(){\n                            deleteSheet();\n                            $ionicPopup.alert({\n                                title: 'Ooops :(',\n                                template: error.message || 'Please try again later...'\n                            });\n                        });\n                    }\n                });\n            };\n\n            $ionicModal.fromTemplateUrl('templates/group/members/add.html', {\n                scope: $scope,\n                animation: 'slide-in-up'\n            }).then(function(modal) {\n                $scope.addMembersModal = modal;\n            });\n\n            this.addMembers = function(){\n                if($scope.addMembersModal) {\n                    $scope.addMembersModal.show();\n                } \n            }\n\n\n            function _reload() {\n                GroupService.getGroupById($stateParams.id).then(function(group){\n                    vm.group = group;\n                });\n                UserService.getUsersByGroupId($stateParams.id).then(function(members){\n                    vm.members = members;\n                });\n            }\n\n            _reload();\n        }]);\n})();","(function(){\n    'use strict';\n\n    angular.module('ws.group')\n        .factory('GroupService', [\"$q\", \"$timeout\", \"UserSession\", \"UserService\", \"USER_ROLES\", function($q, $timeout, UserSession, UserService, USER_ROLES){\n            var user = UserSession.user;\n\n            function getGroups() {\n                //TODO: Implement Real Api\n                var deferred = $q.defer();\n                $timeout(function(){\n                    var groups = [\n                        {\n                            id: 1,\n                            name: 'Group 1',\n                            owner: {\n                                id: 2,\n                                firstName: 'Admini', \n                                lastName: 'Stratore', \n                                username: 'admin',\n                                email: 'admin@hampe.co', \n                                role: USER_ROLES.admin\n                            }\n                        },\n                        {\n                            id: 1,\n                            name: 'Group 2',\n                            owner: {\n                                id: 2,\n                                firstName: 'Admini', \n                                lastName: 'Stratore', \n                                username: 'admin',\n                                email: 'admin@hampe.co', \n                                role: USER_ROLES.admin\n                            }\n                        }\n                    ];\n                    deferred.resolve(groups);\n                }, 1000);\n                return deferred.promise;\n            }\n\n            function getGroupById(id) {\n                //TODO: Implement Real Api\n                var deferred = $q.defer();\n                $timeout(function(){\n                    var group = {\n                        id: 1, \n                        name: 'Group 1', \n                        owner: {\n                            id: 2,\n                            firstName: 'Admini', \n                            lastName: 'Stratore', \n                            username: 'admin',\n                            email: 'admin@hampe.co', \n                            role: USER_ROLES.admin\n                        },\n                        announcements: [\n                            {\n                                id: 1,\n                                logo: 'ion-calendar',\n                                name: 'Announcement 1'\n                            },\n                            {\n                                id: 2,\n                                logo: 'ion-clock',\n                                name: 'Announcement 2'\n                            },\n                            {\n                                id: 3,\n                                logo: 'ion-coffee',\n                                name: 'Announcement 3'\n                            }\n                        ],\n                        members: [\n                            {name: 'John Doe'}, \n                            {name: 'Jane Doe'}, \n                            {name: 'John Doe'}, \n                            {name: 'John Doe'}, \n                            {name: 'John Doe'}, \n                            {name: 'John Doe'}, \n                            {name: 'John Doe'}, \n                            {name: 'John Doe'}\n                        ]\n                    };\n\n                    deferred.resolve(group);    \n                }, 1000);\n                return deferred.promise;\n            }\n\n            function newGroup(group) {\n                var deferred = $q.defer();\n                $timeout(function(){\n                    group.id = 3;\n\n                    //after creation add current user to group\n                    UserService.addUserToGroup(UserSession.getUser(), group.id).then(function(){\n                        getGroupById(group.id).then(function(group){\n                            deferred.resolve(group)\n                        });\n                    }, function(error){\n                        deferred.reject(error);\n                    });\n                    \n                }, 1000);\n\n                return deferred.promise;\n            }\n\n            function deleteGroup(group) {\n                var deferred = $q.defer();\n                $timeout(function(){\n                    deferred.resolve(group);\n                }, 1000);\n\n                return deferred.promise;\n            }\n\n            return {\n                getGroups: getGroups,\n                getGroupById: getGroupById,\n                newGroup: newGroup,\n                deleteGroup: deleteGroup\n            };\n\n        }])\n    ;\n})();","(function(){\n    'use strict';\n\n    angular.module('ws.settings')\n        .controller('SettingsCtrl', [\"$scope\", \"$state\", \"Auth\", \"UserSession\", function($scope, $state, Auth, UserSession){\n            var vm = this;\n\n            this.logout = function() {\n                Auth.logout();\n                vm.done();\n                $state.go('welcome');\n                \n            };\n            this.done = function() {\n                if($scope.settingsModal) {\n                    $scope.settingsModal.hide();\n                }\n            };\n            this.user = UserSession.getUser();\n        }]);\n})();","(function(){\n    'use strict';\n    angular.module('ws.user')\n        .constant('AUTH_EVENTS', {\n            loginSuccess:           'auth-login-success',\n            loginFailed:            'auth-login-failed',\n            logoutSuccess:          'auth-logout-success',\n            sessionTimeout:         'auth-session-timeout',\n            notAuthenticated:       'auth-not-authenticated',\n            notAuthorized:          'auth-not-authorized'\n        });\n})();","(function(){\n    'use strict';\n\n    angular.module('ws.user')\n        .constant('USER_ROLES', {\n            all:        '*',\n            admin:      'admin',\n            teacher:    'teacher',\n            student:    'student',\n        });\n})();","(function(){\n    'use strict';\n\n    angular.module('ws.user')\n        .controller('AclCtrl', [\"$rootScope\", \"Auth\", \"USER_ROLES\", function($rootScope, Auth, USER_ROLES){\n            var vm = this;\n\n            vm.isAuthorized = function(groups) {\n                return Auth.isAuthorized(groups);\n            };\n\n            vm.isAdmin = function() {\n                return Auth.isAuthorized([USER_ROLES.admin]);\n            };\n\n            vm.isTeacher = function() {\n                return Auth.isAuthorized([USER_ROLES.teacher, USER_ROLES.admin])\n            };\n\n            vm.isStudent = function() {\n                return Auth.isAuthorized(USER_ROLES.student, USER_ROLES.teacher, USER_ROLES.admin);\n            };\n            vm.USER_ROLES = USER_ROLES;\n        }]);\n})();","(function(){\n    'use strict';\n    angular.module('ws.user')\n        .controller('LoginCtrl', [\"$rootScope\", \"$scope\", \"$ionicPopup\", \"AUTH_EVENTS\", \"Auth\", function LoginCtrl($rootScope, $scope, $ionicPopup, AUTH_EVENTS, Auth){\n            this.credentials = {\n                username: '',\n                password: ''\n            };\n            this.title = 'Login';\n            var self = this;\n            this.login = function(){\n                this.title = 'Please wait...';\n                Auth.login(this.credentials).then(function(user) {\n                    self.title = 'Login';\n                    self.credentials = {\n                        username: '',\n                        password: ''\n                    };\n                    if($scope.loginModal) {\n                        $scope.loginModal.hide();\n                    }\n                }, function (error) {\n                    self.title = 'Login';\n                    $ionicPopup.alert({\n                        title: 'Ooops :(',\n                        template: error.message || 'Please try again later...'\n                    });\n                });\n            };\n\n            this.cancel = function() {\n                if($scope.loginModal) {\n                    $scope.loginModal.hide();\n                }\n            };\n\n        }]);\n})();","(function(){\n    'use strict';\n    angular.module('ws.user')\n        .controller('RegisterCtrl', [\"$rootScope\", \"$scope\", \"$ionicPopup\", \"AUTH_EVENTS\", \"Auth\", function LoginCtrl($rootScope, $scope, $ionicPopup, AUTH_EVENTS, Auth){\n            this.credentials = {};\n            this.title = '';\n            var self = this;\n            this.register = function(){\n                this.title = 'Please wait...';\n                Auth.register(this.credentials).then(function(user) {\n                    _init();\n                    if($scope.registerModal) {\n                        $scope.registerModal.hide();\n                    }\n                }, function (error) {\n                    $ionicPopup.alert({\n                        title: 'Ooops :(',\n                        template: error.message || 'Please try again later...'\n                    });\n                });\n            };\n\n            this.cancel = function() {\n                if($scope.registerModal) {\n                    $scope.registerModal.hide();\n                }\n            };\n\n            function _init(){\n                self.credentials = {\n                    firstName: '',\n                    lastName: '',\n                    email: '',\n                    username: '',\n                    password: ''\n                };\n                self.title = 'Register';\n            }\n            _init();\n\n        }]);\n})();","(function(){\n    'use strict';\n\n    angular.module('ws.user')\n        .controller('WelcomeCtrl', [\"$scope\", \"$state\", \"$ionicModal\", \"Auth\", function($scope, $state, $ionicModal, Auth){\n            this.openLogin = function(){\n                $scope.loginModal.show();\n            };\n            this.openRegister = function(){\n                $scope.registerModal.show();\n            };\n            //Login\n            $ionicModal.fromTemplateUrl('templates/user/login.html', {\n                scope: $scope,\n                animation: 'slide-in-up'\n            }).then(function(modal) {\n                $scope.loginModal = modal;\n            });\n\n            //Register\n            $ionicModal.fromTemplateUrl('templates/user/register.html', {\n                scope: $scope,\n                animation: 'slide-in-up'\n            }).then(function(modal) {\n                $scope.registerModal = modal;\n            });\n\n            $scope.$on('$destroy', function() {\n                $scope.loginModal.remove();\n                $scope.registerModal.remove();\n            });\n\n\n\n            // Execute action on hide modal\n            $scope.$on('modal.hidden', function() {\n                if(Auth.isAuthenticated()) {\n                    $state.go('tabs.groups');\n                }\n            });\n            // Execute action on remove modal\n            $scope.$on('loginModal.removed', function() {\n            // Execute action\n            });\n\n        }]);\n})();","(function(){\n    'use strict';\n\n    angular.module('ws.user')\n        .factory('Auth', [\"$http\", \"$q\", \"$timeout\", \"$ionicHistory\", \"UserSession\", \"USER_ROLES\", function ($http, $q, $timeout, $ionicHistory, UserSession, USER_ROLES) {\n            var authService = {};\n\n            authService.login = function (credentials) {\n                //TODO: Implement Login Api\n                var deferred = $q.defer();\n\n                $timeout(function(){\n                    var user;\n                    if(credentials.username === 'thomas') {\n                        user = {\n                            id: 1,\n                            firstName: 'Thomas', \n                            lastName: 'Hampe',     \n                            username: 'thomas',\n                            email: 'thomas@hampe.co', \n                            role: USER_ROLES.student\n                        };\n                        UserSession.create(user);\n                        deferred.resolve(user);\n                    } else if(credentials.username === 'admin') {\n                        user = {\n                            id: 2,\n                            firstName: 'Admini', \n                            lastName: 'Stratore', \n                            username: 'admin',\n                            email: 'admin@hampe.co', \n                            role: USER_ROLES.admin\n                        };\n                        UserSession.create(user);\n                        deferred.resolve(user);\n                    } else {\n                        deferred.reject({ message: 'Username or Password invalid' });\n                    }\n                }, 300);\n\n                return deferred.promise;\n            };\n\n            authService.register = function(credentials) {\n                var deferred = $q.defer();\n                //TODO: Login API\n                return this.login(credentials);\n            };\n\n            authService.logout = function(){\n                $ionicHistory.clearCache();\n                return UserSession.destroy();\n            };\n\n            authService.isAuthenticated = function () {\n                return !!UserSession.getUser().username;\n            };\n\n            authService.isAuthorized = function (authorizedRoles) {\n                if (!angular.isArray(authorizedRoles)) {\n                  authorizedRoles = [authorizedRoles];\n                }\n                return (authService.isAuthenticated() && authorizedRoles.indexOf(UserSession.getUser().role) !== -1);\n            };\n\n            return authService;\n        }]);\n})();","(function(){\n    'use strict';\n\n     angular.module('ws.group')\n        .factory('UserService', [\"$q\", \"$timeout\", \"UserSession\", \"USER_ROLES\", function($q, $timeout, UserSession, USER_ROLES){\n\n            var user = UserSession.user;\n\n            function getUsers() {\n                //TODO: Implement Real Api\n                var deferred = $q.defer();\n                $timeout(function(){\n                    var users = [\n                        {\n                            id: 1,\n                            firstName: 'Thomas', \n                            lastName: 'Hampe',     \n                            username: 'thomas',\n                            email: 'thomas@hampe.co', \n                            role: USER_ROLES.student\n                        },\n                        {\n                            id: 2,\n                            firstName: 'Admini', \n                            lastName: 'Stratore', \n                            username: 'admin',\n                            email: 'admin@hampe.co', \n                            role: USER_ROLES.admin\n                        },\n                        {\n                            id: 3,\n                            firstName: 'Thomas 5', \n                            lastName: 'Hampe',     \n                            username: 'thomas',\n                            email: 'thomas@hampe.co', \n                            role: USER_ROLES.student\n                        },\n                        {\n                            id: 4,\n                            firstName: 'Thomas 4', \n                            lastName: 'Hampe',     \n                            username: 'thomas',\n                            email: 'thomas@hampe.co', \n                            role: USER_ROLES.student\n                        },\n                        {\n                            id: 5,\n                            firstName: 'Thomas 4', \n                            lastName: 'Hampe',     \n                            username: 'thomas',\n                            email: 'thomas@hampe.co', \n                            role: USER_ROLES.student\n                        },\n                        {\n                            id: 6,\n                            firstName: 'Thomas 4', \n                            lastName: 'Hampe',     \n                            username: 'thomas',\n                            email: 'thomas@hampe.co', \n                            role: USER_ROLES.student\n                        },\n                        {\n                            id: 7,\n                            firstName: 'Thomas 4', \n                            lastName: 'Hampe',     \n                            username: 'thomas',\n                            email: 'thomas@hampe.co', \n                            role: USER_ROLES.student\n                        }\n                    ];\n                    deferred.resolve(users);\n                }, 1000);\n                return deferred.promise;\n            }\n\n            function getUsersByGroupId(groupId) {\n                //TODO: Implement Real Api\n                var deferred = $q.defer();\n                $timeout(function(){\n                    var users = [\n                        {\n                            id: 1,\n                            firstName: 'Thomas', \n                            lastName: 'Hampe',     \n                            username: 'thomas',\n                            email: 'thomas@hampe.co', \n                            role: USER_ROLES.student\n                        },\n                        {\n                            id: 2,\n                            firstName: 'Admini', \n                            lastName: 'Stratore', \n                            username: 'admin',\n                            email: 'admin@hampe.co', \n                            role: USER_ROLES.admin\n                        }\n                    ];\n                    deferred.resolve(users);\n                }, 1000);\n                return deferred.promise;\n            }\n\n            function getUserById(id) {\n                //TODO: Implement Real Api\n                var deferred = $q.defer();\n                $timeout(function(){\n                    var user = {\n                        id: 3,\n                        firstName: 'Thomas', \n                        lastName: 'Hampe',     \n                        username: 'thomas',\n                        email: 'thomas@hampe.co', \n                        role: USER_ROLES.student\n                    };\n\n                    deferred.resolve(user);    \n                }, 1000);\n                return deferred.promise;\n            }\n\n            function deleteUserFromGroup(user, groupId) {\n                var userId = (angular.isObject(user)) ? user.id : user;\n                var deferred = $q.defer();\n                $timeout(function(){\n                    return deferred.resolve(true);\n                }, 1000);\n                return deferred.promise;\n            }\n\n            function addUserToGroup(user, groupId) {\n                var deferred = $q.defer();\n                $timeout(function(){\n                    return deferred.resolve(true);\n                }, 1000);\n                return deferred.promise;\n            }\n\n            return {\n                getUsers: getUsers,\n                getUsersByGroupId: getUsersByGroupId,\n                getUserById: getUserById,\n                deleteUserFromGroup: deleteUserFromGroup,\n                addUserToGroup: addUserToGroup\n            };\n        }]);\n})();","(function(){\n    'use strict';\n\n    angular.module('ws.user')\n        .service('UserSession', [\"localStorageService\", function(localStorageService){\n            var _userProps = ['firstName', 'lastName', 'email', 'username', 'role'];\n            var user;\n            this.getUser = function() {\n                if(user === undefined) {\n                    user = localStorageService.get('user') || {};\n                }\n                return user;\n            };\n\n            this.create = function (user) {\n                this.destroy();\n                localStorageService.set('user', user);\n                return this.getUser();\n            };\n            this.destroy = function () {\n                user = undefined;\n                localStorageService.set('user', {});\n            };\n            return this;\n        }]);\n})();","(function(){\n    'use strict';\n\n    angular.module('ws.group')\n        .controller('AddMembersCtrl', [\"$scope\", \"$q\", \"$stateParams\", \"$ionicPopup\", \"UserService\", \"GroupService\", function($scope, $q, $stateParams, $ionicPopup, UserService, GroupService){\n            var vm = this;\n            vm.group = {};\n            vm.members = [];\n            vm.users = [];\n\n            function _reset() {\n                vm.title = 'add Members';\n            }\n            function _reload() {\n                GroupService.getGroupById($stateParams.id).then(function(group){\n                    vm.group = group;\n                });\n                $q.all([UserService.getUsers(), UserService.getUsersByGroupId()]).then(function(results){\n                    vm.users = results[0];\n                    vm.members = results[1];\n                    var isInGroup = {};\n                    for(var i in vm.members) {\n                        isInGroup[vm.members[i].id] = true;\n                    }\n\n                    angular.forEach(vm.users, function(user, key){\n                        vm.users[key].isInGroup = !!isInGroup[user.id];\n                        vm.users[key].wasInGroup = !!isInGroup[user.id];\n\n                    })\n                });\n            }\n\n            _reset();\n            _reload();\n\n            this.add = function(){\n                this.title = 'Please wait...';\n                var usersAddToGroup = []\n                var user;\n                for(var i = 0; i < vm.users.length; i++) {\n                    user = vm.users[i];\n                    if(user.isInGroup && !user.wasInGroup){\n                        usersAddToGroup.push(UserService.addUserToGroup(user, vm.group.id));\n                    }\n                }\n                $q.all(usersAddToGroup).then(function(){\n                    _reset();\n                    if($scope.addMembersModal) {\n                        $scope.addMembersModal.hide();\n                    }\n                }, function(error){\n                    self.title = 'add Members';\n                    $ionicPopup.alert({\n                        title: 'Ooops :(',\n                        template: error.message || 'Please try again later...'\n                    });\n                });\n\n            };\n\n            this.cancel = function() {\n                if($scope.addMembersModal) {\n                    $scope.addMembersModal.hide();\n                }\n            };\n\n            \n\n\n        }]);\n})();"],"sourceRoot":"/source/"}